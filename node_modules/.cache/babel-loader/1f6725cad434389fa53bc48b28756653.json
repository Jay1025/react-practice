{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Desktop/React/my_list/src/TastList.js\";\nimport React from \"react\";\nimport { FcCheckmark } from \"react-icons/fc\";\nimport { FcCancel } from \"react-icons/fc\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = /*#__PURE__*/React.memo(_c = props => {\n  const {\n    tasks,\n    setTasks\n  } = props; //완료 체크\n\n  const changeColor = (task, index) => {\n    const unCheckedList = tasks.filter(list => list.id !== task.id);\n    setTasks(() => [...unCheckedList, tasks[index] = { ...tasks[index],\n      done: true\n    }]);\n  }; //완료 취소\n\n\n  const cancelColor = (task, index) => {\n    const unCheckedList = tasks.filter(list => list.id !== task.id);\n    setTasks(() => [...unCheckedList, tasks[index] = { ...tasks[index],\n      done: false\n    }]);\n  };\n\n  tasks.sort(function (a, b) {\n    if (a.id > b.id) {\n      return 1;\n    }\n\n    if (a.id < b.id) {\n      return -1;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks && tasks.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(Li, {\n        done: task.done,\n        children: [/*#__PURE__*/_jsxDEV(Span, {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), !task.done ? /*#__PURE__*/_jsxDEV(Click, {\n          children: /*#__PURE__*/_jsxDEV(FcCheckmark, {\n            onClick: () => changeColor(task, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Click, {\n          children: /*#__PURE__*/_jsxDEV(FcCancel, {\n            onClick: () => cancelColor(task, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n});\n_c2 = TaskList;\nconst Li = styled.li`\n  margin-bottom: 0.8em;\n  background: ${props => props.done ? \"pink\" : \"white\"};\n`;\n_c3 = Li;\nconst Span = styled.span`\n  margin: 0 1em 0 0;\n`;\n_c4 = Span;\nconst Click = styled.span`\n  cursor: pointer;\n`;\n_c5 = Click;\nexport default _c6 = /*#__PURE__*/React.memo(TaskList);\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"TaskList$React.memo\");\n$RefreshReg$(_c2, \"TaskList\");\n$RefreshReg$(_c3, \"Li\");\n$RefreshReg$(_c4, \"Span\");\n$RefreshReg$(_c5, \"Click\");\n$RefreshReg$(_c6, \"%default%\");","map":{"version":3,"sources":["/Users/jay/Desktop/React/my_list/src/TastList.js"],"names":["React","FcCheckmark","FcCancel","styled","TaskList","memo","props","tasks","setTasks","changeColor","task","index","unCheckedList","filter","list","id","done","cancelColor","sort","a","b","map","title","Li","li","Span","span","Click"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FcCheckmark } from \"react-icons/fc\";\nimport { FcCancel } from \"react-icons/fc\";\nimport styled from \"styled-components\";\n\nconst TaskList = React.memo((props) => {\n  const { tasks, setTasks } = props;\n  \n  //완료 체크\n  const changeColor = (task, index) => {\n    const unCheckedList = tasks.filter((list) => list.id !== task.id);\n    setTasks(() => [\n      ...unCheckedList,\n      (tasks[index] = { ...tasks[index], done: true }),\n    ]);\n  };\n  //완료 취소\n  const cancelColor = (task, index) => {\n    const unCheckedList = tasks.filter((list) => list.id !== task.id);\n    setTasks(() => [\n      ...unCheckedList,\n      (tasks[index] = { ...tasks[index], done: false }),\n    ]);\n  };\n  tasks.sort(function (a, b) {\n    if (a.id > b.id) {\n      return 1;\n    }\n    if (a.id < b.id) {\n      return -1;\n    }\n  });\n  return (\n    <ul>\n      {tasks &&\n        tasks.map((task, index) => {\n          return (\n            <Li key={task.id} done={task.done}>\n              <Span>{task.title}</Span>\n              {!task.done ? (\n                <Click>\n                  <FcCheckmark onClick={() => changeColor(task, index)} />\n                </Click>\n              ) : (\n                <Click>\n                  <FcCancel onClick={() => cancelColor(task, index)} />\n                </Click>\n              )}\n            </Li>\n          );\n        })}\n    </ul>\n  );\n});\n\nconst Li = styled.li`\n  margin-bottom: 0.8em;\n  background: ${(props) => (props.done ? \"pink\" : \"white\")};\n`;\nconst Span = styled.span`\n  margin: 0 1em 0 0;\n`;\nconst Click = styled.span`\n  cursor: pointer;\n`;\nexport default React.memo(TaskList);\n"]},"metadata":{},"sourceType":"module"}